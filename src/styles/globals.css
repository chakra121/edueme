/* app/globals.css */

@import 'tailwindcss';
@plugin "daisyui" {
   themes: light --default, dark --prefersdark, bumblebee; /* Added comma for clarity */
 }

@config '../../tailwind.config.ts';

/* --- Confetti Animation Keyframes --- */
@keyframes confetti-slow {
  0% { transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); opacity: 1; }
  100% { transform: translate3d(25px, 105vh, 0) rotateX(360deg) rotateY(180deg); opacity: 1; }
}

@keyframes confetti-medium {
  0% { transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); opacity: 1; }
  100% { transform: translate3d(100px, 105vh, 0) rotateX(100deg) rotateY(360deg); opacity: 1; }
}

@keyframes confetti-fast {
  0% { transform: translate3d(0, 0, 0) rotateX(0) rotateY(0); opacity: 1; }
  100% { transform: translate3d(-50px, 105vh, 0) rotateX(10deg) rotateY(250deg); opacity: 1; }
}

/* --- Confetti Base Styles --- */
.confetti {
  /* Base styles applied dynamically in JS component:
     position: absolute;
     left: [random];
     width: [random];
     height: [random];
     background-color: [random];
     top: -10px;
     border-radius: 0%;
     z-index: 9999;
  */
  opacity: 0; /* Start hidden, animation makes it visible */
  pointer-events: none; /* Ensure confetti doesn't block interactions */
}

.confetti--animation-slow {
  animation: confetti-slow 2.25s linear forwards;
}

.confetti--animation-medium {
  animation: confetti-medium 1.75s linear forwards;
}

.confetti--animation-fast {
  animation: confetti-fast 1.25s linear forwards;
}

/* --- Tailwind Base, Components, Utilities --- */
/* These directives should ideally come after imports/plugins but before custom layers if needed */
@tailwind base;
@tailwind components;
@tailwind utilities;


/* --- Base Layer Styles --- */
@layer base {
  /*
    Tailwind CSS v4 Compatibility: Default border color changed to `currentcolor`.
    These styles retain the v3 behavior using gray-200 as a fallback.
    Remove if explicitly setting border colors everywhere or adapting to v4 defaults.
  */
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor); /* Consider if var(--border) is more appropriate */
  }

  /* Ensure background and text colors update with theme */
  html, body {
    @apply bg-background text-foreground transition-colors duration-300;
    /* Prevent horizontal scrollbars caused by off-screen confetti initially */
    /* overflow-x: hidden; /* Reconsider if this interferes with layout */
  }

  /* Apply theme border color */
  * {
    @apply border-border;
  }

  /* Theme CSS Variables */
  :root {
    --background: 0 0% 100%; /* White for light mode */
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%; /* Used by * selector */
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
    --color-1: 0 100% 63%;
    --color-2: 270 100% 63%;
    --color-3: 210 100% 63%;
    --color-4: 195 100% 63%;
    --color-5: 90 100% 63%;
    /* Fallback for v3 border compatibility if needed */
    --color-gray-200: hsl(0 0% 89.8%);
  }

  /* Dark Mode Variables */
  .dark {
    --background: 0 0% 10%; /* Darker background for dark mode */
    --foreground: 0 0% 98%;
    --card: 0 0% 14%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 14%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 20%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 20%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 20%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 20%; /* Used by * selector */
    --input: 0 0% 20%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    --color-1: 0 100% 63%;
    --color-2: 270 100% 63%;
    --color-3: 210 100% 63%;
    --color-4: 195 100% 63%;
    --color-5: 90 100% 63%;
     /* Fallback for v3 border compatibility if needed */
    --color-gray-200: hsl(0 0% 20%);
  }
}

/* --- Utility Layer / Custom Components --- */
/* You can use @layer components or @layer utilities for custom classes */

/* Custom Masonry Style */
.break-inside-avoid {
  break-inside: avoid;
}

/* --- Progress Bar Transitions --- */
/* Apply transitions to elements used in the progress bar */
/* These classes should be added to the circle/line elements in your TSX */
.progress-circle, .progress-line {
  transition: all 0.5s ease-out; /* Smooth transitions for background, border, width etc. */
}

/* --- DaisyUI Button styles are handled by the plugin --- */
/* No need for custom .btn, .btn-primary etc. unless overriding DaisyUI */